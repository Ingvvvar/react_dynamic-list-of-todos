{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","state","query","filter","handleQuery","event","setState","target","value","handleFilter","filterTodos","todos","props","filteredTodos","todo","title","toLowerCase","includes","completed","onUserSelection","this","className","type","name","placeholder","onChange","disabled","map","classNames","checked","readOnly","onClick","userId","id","React","Component","API_URL","loadTodosAsync","a","limit","fetch","respons","json","loadUserAsync","CurrentUser","user","reloadUser","prevPrors","email","phone","reset","App","selectedUserId","handleUserSelection","resetSelection","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c9e9c0d.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './TodoList.scss';\n\ntype Props = {\n  onUserSelection: (userId: number) => void;\n  todos: Todo[];\n};\n\ntype State = {\n  query: string;\n  filter: string;\n};\n\nexport class TodoList extends React.Component<Props, State> {\n  state: State = {\n    query: '',\n    filter: 'All',\n  };\n\n  handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ query: event.target.value });\n  };\n\n  handleFilter = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({ filter: event.target.value });\n  };\n\n  filterTodos = () => {\n    const { todos } = this.props;\n    const { query, filter } = this.state;\n\n    let filteredTodos = todos.filter(todo => (todo.title\n      && todo.title.toLowerCase().includes(query.toLowerCase())));\n\n    filteredTodos = filteredTodos.filter(todo => {\n      switch (filter) {\n        case 'Active':\n          return !todo.completed;\n        case 'Completed':\n          return todo.completed;\n        case 'All':\n        default:\n          return todos;\n      }\n    });\n\n    return filteredTodos;\n  };\n\n  render() {\n    const { onUserSelection } = this.props;\n    const { query, filter } = this.state;\n    const filteredTodos = this.filterTodos();\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__form\">\n          <input\n            type=\"text\"\n            name=\"query\"\n            value={query}\n            className=\"TodoList__item\"\n            placeholder=\"Search by title\"\n            onChange={this.handleQuery}\n          />\n\n          <select\n            name=\"filter\"\n            value={filter}\n            className=\"TodoList__item\"\n            onChange={this.handleFilter}\n          >\n            <option value=\"\" disabled>\n              Choose status type\n            </option>\n            <option value=\"All\">All</option>\n            <option value=\"Active\">Active</option>\n            <option value=\"Completed\">Completed</option>\n          </select>\n        </div>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames(\n                  'TodoList__item',\n                  {\n                    'TodoList__item--checked': todo.completed,\n                    'TodoList__item--unchecked': !todo.completed,\n                  },\n                )}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    readOnly\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className=\"\n                  TodoList__user-button\n                  TodoList__user-button--selected\n                  button\n                \"\n                  type=\"button\"\n                  onClick={() => {\n                    onUserSelection(todo.userId);\n                  }}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","export const API_URL = 'https://mate.academy/students-api';\n\nexport const loadTodos = (limit = 1000) => {\n  return fetch(`${API_URL}/todos?limit=${limit}`)\n    .then(respons => respons.json());\n};\n\nexport const loadTodosAsync = async (limit = 200) => {\n  const respons = await fetch(`${API_URL}/todos?limit=${limit}`);\n\n  return respons.json();\n};\n\nexport const loadUserAsync = async (userId: number) => {\n  const respons = await fetch(`${API_URL}/users/${userId}`);\n\n  return respons.json();\n};\n","import React from 'react';\nimport './CurrentUser.scss';\nimport { loadUserAsync } from '../../api';\n\ninterface Props {\n  userId: number;\n  reset: () => void;\n}\n\ntype State = {\n  user: User | null;\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    user: null,\n  };\n\n  async componentDidMount() {\n    this.reloadUser(this.props.userId);\n  }\n\n  async componentDidUpdate(prevPrors: Props) {\n    if (prevPrors.userId !== this.props.userId) {\n      this.reloadUser(this.props.userId);\n    }\n  }\n\n  async reloadUser(userId: number) {\n    const user = await loadUserAsync(userId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    if (!user) {\n      return (\n        <div>User not found</div>\n      );\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {user.id}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n        <button\n          type=\"button\"\n          className=\"button CurrentUser__clear\"\n          onClick={this.props.reset}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { loadTodosAsync } from './api';\n\ninterface State {\n  todos: Todo[];\n  selectedUserId: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const data = await loadTodosAsync();\n\n    this.setState({\n      todos: data,\n    });\n  }\n\n  handleUserSelection = (userId: number) => {\n    this.setState({ selectedUserId: userId });\n  };\n\n  resetSelection = () => {\n    this.setState({ selectedUserId: 0 });\n  };\n\n  render() {\n    const { selectedUserId, todos } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            onUserSelection={this.handleUserSelection}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                reset={this.resetSelection}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}